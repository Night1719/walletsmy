"""
Handler for blocking file uploads from users.
Prevents users from sending screenshots, images, and other files to the bot.
"""
from aiogram import Router, types, F
from aiogram.fsm.context import FSMContext
from config import BLOCK_FILE_UPLOADS, BLOCKED_UPLOAD_TYPES, ALLOWED_UPLOAD_CONTEXTS
from storage import get_session
import logging

router = Router()
logger = logging.getLogger(__name__)


def _is_upload_allowed_in_context(state: FSMContext) -> bool:
    """Check if file upload is allowed in current context"""
    if not ALLOWED_UPLOAD_CONTEXTS:
        return False
    
    current_state = state.get_state()
    if not current_state:
        return False
    
    # Check if current state is in allowed contexts
    for allowed_context in ALLOWED_UPLOAD_CONTEXTS:
        if allowed_context and allowed_context in current_state:
            return True
    
    return False


def _get_file_type_name(file_type: str) -> str:
    """Get human-readable name for file type"""
    type_names = {
        'photo': '—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏',
        'document': '–¥–æ–∫—É–º–µ–Ω—Ç—ã',
        'sticker': '—Å—Ç–∏–∫–µ—Ä—ã',
        'video': '–≤–∏–¥–µ–æ',
        'voice': '–≥–æ–ª–æ—Å–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è',
        'video_note': '–≤–∏–¥–µ–æ—Å–æ–æ–±—â–µ–Ω–∏—è',
        'animation': '–∞–Ω–∏–º–∞—Ü–∏–∏ (GIF)',
        'audio': '–∞—É–¥–∏–æ—Ñ–∞–π–ª—ã',
        'contact': '–∫–æ–Ω—Ç–∞–∫—Ç—ã',
        'location': '–≥–µ–æ–ª–æ–∫–∞—Ü–∏—é',
        'venue': '–º–µ—Å—Ç–∞',
        'poll': '–æ–ø—Ä–æ—Å—ã',
        'dice': '–∫–æ—Å—Ç–∏',
        'dart': '–¥—Ä–æ—Ç–∏–∫–∏',
        'new_chat_members': '–Ω–æ–≤—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤',
        'left_chat_member': '–ø–æ–∫–∏–Ω—É–≤—à–∏—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤',
        'new_chat_title': '–Ω–æ–≤—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è —á–∞—Ç–∞',
        'new_chat_photo': '–Ω–æ–≤—ã–µ —Ñ–æ—Ç–æ —á–∞—Ç–∞',
        'delete_chat_photo': '—É–¥–∞–ª–µ–Ω–∏–µ —Ñ–æ—Ç–æ —á–∞—Ç–∞',
        'group_chat_created': '—Å–æ–∑–¥–∞–Ω–∏–µ –≥—Ä—É–ø–ø–æ–≤–æ–≥–æ —á–∞—Ç–∞',
        'supergroup_chat_created': '—Å–æ–∑–¥–∞–Ω–∏–µ —Å—É–ø–µ—Ä–≥—Ä—É–ø–ø—ã',
        'channel_chat_created': '—Å–æ–∑–¥–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞',
        'migrate_to_chat_id': '–º–∏–≥—Ä–∞—Ü–∏—é —á–∞—Ç–∞',
        'migrate_from_chat_id': '–º–∏–≥—Ä–∞—Ü–∏—é –∏–∑ —á–∞—Ç–∞',
        'pinned_message': '–∑–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è',
        'invoice': '—Å—á–µ—Ç–∞',
        'successful_payment': '—É—Å–ø–µ—à–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∏',
        'connected_website': '–ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã–µ —Å–∞–π—Ç—ã',
        'passport_data': '–¥–∞–Ω–Ω—ã–µ –ø–∞—Å–ø–æ—Ä—Ç–∞',
        'proximity_alert_triggered': '—Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏–µ –≥–µ–æ–∑–æ–Ω—ã',
    }
    return type_names.get(file_type, file_type)


def _get_block_message(file_type: str) -> str:
    """Get appropriate block message for file type"""
    type_name = _get_file_type_name(file_type)
    
    if file_type in ['photo', 'document']:
        return (
            f"üö´ –ó–∞–≥—Ä—É–∑–∫–∞ {type_name} –∑–∞–ø—Ä–µ—â–µ–Ω–∞.\n\n"
            f"‚ùå –ù–µ–ª—å–∑—è –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å:\n"
            f"‚Ä¢ –°–∫—Ä–∏–Ω—à–æ—Ç—ã –∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏\n"
            f"‚Ä¢ –î–æ–∫—É–º–µ–Ω—Ç—ã –∏ —Ñ–∞–π–ª—ã\n"
            f"‚Ä¢ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è\n\n"
            f"‚úÖ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –æ–±—â–µ–Ω–∏—è —Å –±–æ—Ç–æ–º.\n"
            f"üìö –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä–∞–∑–¥–µ–ª '–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏'."
        )
    elif file_type in ['sticker', 'animation']:
        return (
            f"üö´ –û—Ç–ø—Ä–∞–≤–∫–∞ {type_name} –∑–∞–ø—Ä–µ—â–µ–Ω–∞.\n\n"
            f"‚ùå –ù–µ–ª—å–∑—è –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å:\n"
            f"‚Ä¢ –°—Ç–∏–∫–µ—Ä—ã –∏ –∞–Ω–∏–º–∞—Ü–∏–∏\n"
            f"‚Ä¢ GIF-—Ñ–∞–π–ª—ã\n\n"
            f"‚úÖ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –æ–±—â–µ–Ω–∏—è —Å –±–æ—Ç–æ–º."
        )
    elif file_type in ['video', 'voice', 'video_note']:
        return (
            f"üö´ –û—Ç–ø—Ä–∞–≤–∫–∞ {type_name} –∑–∞–ø—Ä–µ—â–µ–Ω–∞.\n\n"
            f"‚ùå –ù–µ–ª—å–∑—è –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å:\n"
            f"‚Ä¢ –í–∏–¥–µ–æ –∏ –∞—É–¥–∏–æ\n"
            f"‚Ä¢ –ì–æ–ª–æ—Å–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è\n\n"
            f"‚úÖ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –æ–±—â–µ–Ω–∏—è —Å –±–æ—Ç–æ–º."
        )
    else:
        return (
            f"üö´ –û—Ç–ø—Ä–∞–≤–∫–∞ {type_name} –∑–∞–ø—Ä–µ—â–µ–Ω–∞.\n\n"
            f"‚ùå –≠—Ç–æ—Ç —Ç–∏–ø –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è.\n\n"
            f"‚úÖ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –æ–±—â–µ–Ω–∏—è —Å –±–æ—Ç–æ–º."
        )


@router.message(F.photo)
async def block_photo_upload(message: types.Message, state: FSMContext):
    """Block photo uploads (screenshots)"""
    if not BLOCK_FILE_UPLOADS:
        return
    
    if _is_upload_allowed_in_context(state):
        return
    
    logger.warning(f"User {message.from_user.id} attempted to upload photo")
    await message.answer(_get_block_message('photo'))


@router.message(F.document)
async def block_document_upload(message: types.Message, state: FSMContext):
    """Block document uploads"""
    if not BLOCK_FILE_UPLOADS:
        return
    
    if _is_upload_allowed_in_context(state):
        return
    
    # Check if it's an image disguised as document
    if message.document.mime_type and message.document.mime_type.startswith('image/'):
        logger.warning(f"User {message.from_user.id} attempted to upload image as document: {message.document.file_name}")
        await message.answer(
            "üö´ –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∑–∞–ø—Ä–µ—â–µ–Ω–∞.\n\n"
            "‚ùå –ù–µ–ª—å–∑—è –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å:\n"
            "‚Ä¢ –°–∫—Ä–∏–Ω—à–æ—Ç—ã –∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏\n"
            "‚Ä¢ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –ª—é–±–æ–º —Ñ–æ—Ä–º–∞—Ç–µ\n\n"
            "‚úÖ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –æ–±—â–µ–Ω–∏—è —Å –±–æ—Ç–æ–º.\n"
            "üìö –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä–∞–∑–¥–µ–ª '–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏'."
        )
        return
    
    # Check file extension for common image formats
    if message.document.file_name:
        file_ext = message.document.file_name.lower().split('.')[-1]
        image_extensions = ['png', 'jpg', 'jpeg', 'gif', 'bmp', 'tiff', 'webp', 'ico', 'svg']
        if file_ext in image_extensions:
            logger.warning(f"User {message.from_user.id} attempted to upload image with document extension: {message.document.file_name}")
            await message.answer(
                "üö´ –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∑–∞–ø—Ä–µ—â–µ–Ω–∞.\n\n"
                "‚ùå –ù–µ–ª—å–∑—è –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å:\n"
                "‚Ä¢ –°–∫—Ä–∏–Ω—à–æ—Ç—ã –∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏\n"
                "‚Ä¢ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –ª—é–±–æ–º —Ñ–æ—Ä–º–∞—Ç–µ\n\n"
                "‚úÖ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –æ–±—â–µ–Ω–∏—è —Å –±–æ—Ç–æ–º.\n"
                "üìö –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä–∞–∑–¥–µ–ª '–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏'."
            )
            return
    
    # Check for screenshot-related keywords in filename
    if message.document.file_name:
        filename_lower = message.document.file_name.lower()
        screenshot_keywords = [
            'screenshot', '—Å–∫—Ä–∏–Ω—à–æ—Ç', 'screen', '—ç–∫—Ä–∞–Ω', 'capture', '–∑–∞—Ö–≤–∞—Ç',
            'print', '–ø–µ—á–∞—Ç—å', 'screen_', 'img_', 'photo', '—Ñ–æ—Ç–æ', 'picture', '–∫–∞—Ä—Ç–∏–Ω–∫–∞'
        ]
        if any(keyword in filename_lower for keyword in screenshot_keywords):
            logger.warning(f"User {message.from_user.id} attempted to upload file with screenshot name: {message.document.file_name}")
            await message.answer(
                "üö´ –ó–∞–≥—Ä—É–∑–∫–∞ —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤ –∑–∞–ø—Ä–µ—â–µ–Ω–∞.\n\n"
                "‚ùå –ù–µ–ª—å–∑—è –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å:\n"
                "‚Ä¢ –°–∫—Ä–∏–Ω—à–æ—Ç—ã –∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏\n"
                "‚Ä¢ –§–∞–π–ª—ã —Å –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏, —Å–æ–¥–µ—Ä–∂–∞—â–∏–º–∏ '—Å–∫—Ä–∏–Ω—à–æ—Ç', 'screenshot' –∏ —Ç.–¥.\n\n"
                "‚úÖ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –æ–±—â–µ–Ω–∏—è —Å –±–æ—Ç–æ–º.\n"
                "üìö –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä–∞–∑–¥–µ–ª '–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏'."
            )
            return
    
    logger.warning(f"User {message.from_user.id} attempted to upload document: {message.document.file_name}")
    await message.answer(_get_block_message('document'))


@router.message(F.sticker)
async def block_sticker_upload(message: types.Message, state: FSMContext):
    """Block sticker uploads"""
    if not BLOCK_FILE_UPLOADS:
        return
    
    if _is_upload_allowed_in_context(state):
        return
    
    logger.warning(f"User {message.from_user.id} attempted to send sticker")
    await message.answer(_get_block_message('sticker'))


@router.message(F.video)
async def block_video_upload(message: types.Message, state: FSMContext):
    """Block video uploads"""
    if not BLOCK_FILE_UPLOADS:
        return
    
    if _is_upload_allowed_in_context(state):
        return
    
    logger.warning(f"User {message.from_user.id} attempted to upload video")
    await message.answer(_get_block_message('video'))


@router.message(F.voice)
async def block_voice_upload(message: types.Message, state: FSMContext):
    """Block voice message uploads"""
    if not BLOCK_FILE_UPLOADS:
        return
    
    if _is_upload_allowed_in_context(state):
        return
    
    logger.warning(f"User {message.from_user.id} attempted to send voice message")
    await message.answer(_get_block_message('voice'))


@router.message(F.video_note)
async def block_video_note_upload(message: types.Message, state: FSMContext):
    """Block video note uploads"""
    if not BLOCK_FILE_UPLOADS:
        return
    
    if _is_upload_allowed_in_context(state):
        return
    
    logger.warning(f"User {message.from_user.id} attempted to send video note")
    await message.answer(_get_block_message('video_note'))


@router.message(F.animation)
async def block_animation_upload(message: types.Message, state: FSMContext):
    """Block animation (GIF) uploads"""
    if not BLOCK_FILE_UPLOADS:
        return
    
    if _is_upload_allowed_in_context(state):
        return
    
    logger.warning(f"User {message.from_user.id} attempted to send animation")
    await message.answer(_get_block_message('animation'))


@router.message(F.audio)
async def block_audio_upload(message: types.Message, state: FSMContext):
    """Block audio file uploads"""
    if not BLOCK_FILE_UPLOADS:
        return
    
    if _is_upload_allowed_in_context(state):
        return
    
    logger.warning(f"User {message.from_user.id} attempted to upload audio")
    await message.answer(_get_block_message('audio'))


@router.message(F.contact)
async def block_contact_upload(message: types.Message, state: FSMContext):
    """Block contact sharing"""
    if not BLOCK_FILE_UPLOADS:
        return
    
    if _is_upload_allowed_in_context(state):
        return
    
    logger.warning(f"User {message.from_user.id} attempted to share contact")
    await message.answer(
        "üö´ –û—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –∑–∞–ø—Ä–µ—â–µ–Ω–∞.\n\n"
        "‚ùå –ù–µ–ª—å–∑—è –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å:\n"
        "‚Ä¢ –ö–æ–Ω—Ç–∞–∫—Ç—ã –∏ –≤–∏–∑–∏—Ç–∫–∏\n\n"
        "‚úÖ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –æ–±—â–µ–Ω–∏—è —Å –±–æ—Ç–æ–º."
    )


@router.message(F.location)
async def block_location_upload(message: types.Message, state: FSMContext):
    """Block location sharing"""
    if not BLOCK_FILE_UPLOADS:
        return
    
    if _is_upload_allowed_in_context(state):
        return
    
    logger.warning(f"User {message.from_user.id} attempted to share location")
    await message.answer(
        "üö´ –û—Ç–ø—Ä–∞–≤–∫–∞ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏ –∑–∞–ø—Ä–µ—â–µ–Ω–∞.\n\n"
        "‚ùå –ù–µ–ª—å–∑—è –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å:\n"
        "‚Ä¢ –ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –∏ –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é\n\n"
        "‚úÖ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –æ–±—â–µ–Ω–∏—è —Å –±–æ—Ç–æ–º."
    )


@router.message(F.poll)
async def block_poll_upload(message: types.Message, state: FSMContext):
    """Block poll creation"""
    if not BLOCK_FILE_UPLOADS:
        return
    
    if _is_upload_allowed_in_context(state):
        return
    
    logger.warning(f"User {message.from_user.id} attempted to create poll")
    await message.answer(
        "üö´ –°–æ–∑–¥–∞–Ω–∏–µ –æ–ø—Ä–æ—Å–æ–≤ –∑–∞–ø—Ä–µ—â–µ–Ω–æ.\n\n"
        "‚ùå –ù–µ–ª—å–∑—è —Å–æ–∑–¥–∞–≤–∞—Ç—å:\n"
        "‚Ä¢ –û–ø—Ä–æ—Å—ã –∏ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è\n\n"
        "‚úÖ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –æ–±—â–µ–Ω–∏—è —Å –±–æ—Ç–æ–º."
    )


@router.message(F.dice)
async def block_dice_upload(message: types.Message, state: FSMContext):
    """Block dice sending"""
    if not BLOCK_FILE_UPLOADS:
        return
    
    if _is_upload_allowed_in_context(state):
        return
    
    logger.warning(f"User {message.from_user.id} attempted to send dice")
    await message.answer(
        "üö´ –û—Ç–ø—Ä–∞–≤–∫–∞ –∏–≥—Ä –∑–∞–ø—Ä–µ—â–µ–Ω–∞.\n\n"
        "‚ùå –ù–µ–ª—å–∑—è –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å:\n"
        "‚Ä¢ –ò–≥—Ä—ã (–∫–æ—Å—Ç–∏, –¥—Ä–æ—Ç–∏–∫–∏ –∏ —Ç.–¥.)\n\n"
        "‚úÖ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –æ–±—â–µ–Ω–∏—è —Å –±–æ—Ç–æ–º."
    )


@router.message(F.venue)
async def block_venue_upload(message: types.Message, state: FSMContext):
    """Block venue sharing"""
    if not BLOCK_FILE_UPLOADS:
        return
    
    if _is_upload_allowed_in_context(state):
        return
    
    logger.warning(f"User {message.from_user.id} attempted to share venue")
    await message.answer(
        "üö´ –û—Ç–ø—Ä–∞–≤–∫–∞ –º–µ—Å—Ç –∑–∞–ø—Ä–µ—â–µ–Ω–∞.\n\n"
        "‚ùå –ù–µ–ª—å–∑—è –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å:\n"
        "‚Ä¢ –ú–µ—Å—Ç–∞ –∏ –∑–∞–≤–µ–¥–µ–Ω–∏—è\n\n"
        "‚úÖ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –æ–±—â–µ–Ω–∏—è —Å –±–æ—Ç–æ–º."
    )