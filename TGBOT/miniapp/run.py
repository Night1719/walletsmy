"""
Run script for Telegram Mini App
"""
import os
import sys
from pathlib import Path

# Add current directory to Python path
current_dir = Path(__file__).parent
sys.path.insert(0, str(current_dir))

# Load environment variables
from dotenv import load_dotenv
load_dotenv()

# Import and run the app
from app import app
from config import FLASK_HOST, FLASK_PORT, FLASK_DEBUG

if __name__ == '__main__':
    print("üöÄ –ó–∞–ø—É—Å–∫ Telegram Mini App...")
    print(f"üìç –•–æ—Å—Ç: {FLASK_HOST}")
    print(f"üîå –ü–æ—Ä—Ç: {FLASK_PORT}")
    print(f"üêõ –†–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏: {FLASK_DEBUG}")
    print(f"üåê URL: https://bot.bunter.ru:{FLASK_PORT}")
    print("=" * 50)
    
    try:
        # Use HTTPS with custom certificate
        ssl_context = None
        
        # Try to use custom certificate if available
        cert_path = os.getenv('SSL_CERT_PATH', '')
        key_path = os.getenv('SSL_KEY_PATH', '')
        
        if cert_path and key_path and os.path.exists(cert_path) and os.path.exists(key_path):
            ssl_context = (cert_path, key_path)
            print(f"üîí –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç: {cert_path}")
        else:
            # Use adhoc SSL as fallback
            ssl_context = 'adhoc'
            print("‚ö†Ô∏è  –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å–∞–º–æ–ø–æ–¥–ø–∏—Å–Ω–æ–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç")
        
        app.run(
            host=FLASK_HOST,
            port=FLASK_PORT,
            debug=FLASK_DEBUG,
            ssl_context=ssl_context
        )
    except KeyboardInterrupt:
        print("\nüõë Mini App –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ Mini App: {e}")
        sys.exit(1)