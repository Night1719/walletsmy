@echo off
echo ========================================
echo    –î–æ–±–∞–≤–ª–µ–Ω–∏–µ otp_verification_keyboard
echo ========================================
echo.

echo üîß –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏...
if exist "keyboards.py" (
    copy "keyboards.py" "keyboards_backup_otp.py" >nul
    echo ‚úÖ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞
) else (
    echo ‚ùå –§–∞–π–ª keyboards.py –Ω–µ –Ω–∞–π–¥–µ–Ω
    pause
    exit /b 1
)

echo.
echo üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è otp_verification_keyboard...
findstr /C:"def otp_verification_keyboard" keyboards.py >nul
if not errorlevel 1 (
    echo ‚úÖ –§—É–Ω–∫—Ü–∏—è otp_verification_keyboard —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    goto :test_import
)

echo.
echo ‚ûï –î–æ–±–∞–≤–ª–µ–Ω–∏–µ otp_verification_keyboard...

REM –î–æ–±–∞–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é –≤ –∫–æ–Ω–µ—Ü —Ñ–∞–π–ª–∞
echo. >> keyboards.py
echo def otp_verification_keyboard(): >> keyboards.py
echo     """OTP verification keyboard""" >> keyboards.py
echo     kb = ReplyKeyboardBuilder() >> keyboards.py
echo     kb.row(KeyboardButton(text="üîÑ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–¥ –ø–æ–≤—Ç–æ—Ä–Ω–æ")) >> keyboards_new.py
echo     kb.row(KeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞")) >> keyboards_new.py
echo     return kb.as_markup(resize_keyboard=True) >> keyboards.py

echo ‚úÖ –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∞

:test_import
echo.
echo üß™ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–∞...
python -c "from keyboards import otp_verification_keyboard; print('‚úÖ otp_verification_keyboard –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω')" 2>nul
if errorlevel 1 (
    echo ‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ otp_verification_keyboard
    echo üîÑ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏...
    copy "keyboards_backup_otp.py" "keyboards.py" >nul
    pause
    exit /b 1
)

echo ‚úÖ otp_verification_keyboard –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ
echo.

echo üß™ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –≤—Å–µ—Ö —Ñ—É–Ω–∫—Ü–∏–π...
python -c "from keyboards import instructions_main_keyboard, instructions_category_keyboard, instruction_keyboard, otp_verification_keyboard, main_menu_after_auth_keyboard; print('‚úÖ –í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã')" 2>nul
if errorlevel 1 (
    echo ‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –≤—Å–µ—Ö —Ñ—É–Ω–∫—Ü–∏–π
    echo üîÑ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏...
    copy "keyboards_backup_otp.py" "keyboards.py" >nul
    pause
    exit /b 1
)

echo ‚úÖ –í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ
echo.

echo üß™ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –±–æ—Ç–∞...
python -c "import bot; print('‚úÖ bot.py –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω')" 2>nul
if errorlevel 1 (
    echo ‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ bot.py
    echo üîÑ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏...
    copy "keyboards_backup_otp.py" "keyboards.py" >nul
    pause
    exit /b 1
)

echo ‚úÖ bot.py –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ
echo.

echo ========================================
echo           üéâ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!
echo ========================================
echo.
echo ‚úÖ otp_verification_keyboard –¥–æ–±–∞–≤–ª–µ–Ω
echo ‚úÖ –í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞—é—Ç
echo ‚úÖ bot.py –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è
echo üìÅ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è: keyboards_backup_otp.py
echo.
echo üöÄ –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å:
echo    python bot.py
echo.
pause