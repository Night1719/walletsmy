@echo off
echo ========================================
echo    –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –æ—à–∏–±–æ–∫ –¥–ª—è Windows
echo ========================================
echo.

echo üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ config.py...
if exist "config_fixed.py" (
    copy "config_fixed.py" "config.py" >nul
    echo ‚úÖ config.py –∏—Å–ø—Ä–∞–≤–ª–µ–Ω
) else (
    echo ‚ùå –§–∞–π–ª config_fixed.py –Ω–µ –Ω–∞–π–¥–µ–Ω
    echo üìù –°–æ–∑–¥–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ config.py...
    
    REM –°–æ–∑–¥–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π config.py
    echo # Video file extensions > temp_config.py
    echo VIDEO_FILE_EXTENSIONS = os.getenv("VIDEO_FILE_EXTENSIONS", "mp4,avi,mov,wmv,flv,webm,mkv").split(",") >> temp_config.py
    
    REM –î–æ–±–∞–≤–ª—è–µ–º –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É config.py
    type config.py >> temp_config.py
    move temp_config.py config.py >nul
    echo ‚úÖ config.py –∏—Å–ø—Ä–∞–≤–ª–µ–Ω –≤—Ä—É—á–Ω—É—é
)

echo.
echo üß™ –ü—Ä–æ–≤–µ—Ä–∫–∞ config.py...
python -c "from config import VIDEO_FILE_EXTENSIONS; print('‚úÖ VIDEO_FILE_EXTENSIONS –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω')" 2>nul
if errorlevel 1 (
    echo ‚ùå –û—à–∏–±–∫–∞ –≤ config.py
    echo üîß –†—É—á–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ config.py...
    echo –î–æ–±–∞–≤—å—Ç–µ –≤ –∫–æ–Ω–µ—Ü config.py:
    echo VIDEO_FILE_EXTENSIONS = os.getenv("VIDEO_FILE_EXTENSIONS", "mp4,avi,mov,wmv,flv,webm,mkv").split(",")
    pause
    exit /b 1
)

echo ‚úÖ config.py —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ
echo.

echo üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ keyboards.py...
python -c "from keyboards import instructions_category_keyboard, instruction_keyboard; print('‚úÖ keyboards —Ñ—É–Ω–∫—Ü–∏–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã')" 2>nul
if errorlevel 1 (
    echo ‚ùå –û—à–∏–±–∫–∞ –≤ keyboards.py
    echo üîß –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π...
    
    REM –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –≤ keyboards.py
    echo. >> keyboards.py
    echo def instructions_category_keyboard(category_id: str): >> keyboards.py
    echo     kb = InlineKeyboardBuilder() >> keyboards.py
    echo     manager = get_instruction_manager() >> keyboards.py
    echo     instructions = manager.get_instructions_by_category(category_id) >> keyboards.py
    echo     if instructions: >> keyboards.py
    echo         for instruction in instructions: >> keyboards.py
    echo             kb.button(text=f"üìÑ {instruction['name']}", callback_data=f"instruction_{category_id}_{instruction['id']}") >> keyboards.py
    echo     else: >> keyboards.py
    echo         kb.button(text="‚ùå –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã", callback_data="no_instructions") >> keyboards.py
    echo     kb.button(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_categories") >> keyboards.py
    echo     kb.adjust(1) >> keyboards.py
    echo     return kb.as_markup() >> keyboards.py
    echo. >> keyboards.py
    echo def instruction_keyboard(category_id: str, instruction_id: str): >> keyboards.py
    echo     kb = InlineKeyboardBuilder() >> keyboards.py
    echo     manager = get_instruction_manager() >> keyboards.py
    echo     instruction = manager.get_instruction(category_id, instruction_id) >> keyboards.py
    echo     if instruction: >> keyboards.py
    echo         for format_type in instruction.get('formats', []): >> keyboards.py
    echo             kb.button(text=f"üìÑ {format_type.upper()}", callback_data=f"create_secure_link_{category_id}_{instruction_id}_{format_type}") >> keyboards.py
    echo     kb.button(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=f"category_{category_id}") >> keyboards.py
    echo     kb.adjust(1) >> keyboards.py
    echo     return kb.as_markup() >> keyboards.py
    
    echo ‚úÖ –§—É–Ω–∫—Ü–∏–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ keyboards.py
)

echo.
echo üß™ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –±–æ—Ç–∞...
python -c "from handlers import instructions as instructions_handlers; print('‚úÖ handlers.instructions –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω')" 2>nul
if errorlevel 1 (
    echo ‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ handlers.instructions
    echo üîß –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª—ã handlers/instructions.py –∏ keyboards.py
    pause
    exit /b 1
)

echo ‚úÖ handlers.instructions –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ
echo.

echo ========================================
echo           üéâ –í—Å–µ –æ—à–∏–±–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã!
echo ========================================
echo.
echo ‚úÖ config.py –∏—Å–ø—Ä–∞–≤–ª–µ–Ω
echo ‚úÖ keyboards.py –∏—Å–ø—Ä–∞–≤–ª–µ–Ω
echo ‚úÖ handlers.instructions –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω
echo.
echo üöÄ –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å:
echo    python bot.py
echo.
echo üì± Mini App:
echo    cd miniapp
echo    python run.py
echo.
pause