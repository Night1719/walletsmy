@echo off
echo ========================================
echo    –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ keyboards.py –¥–ª—è Windows
echo ========================================
echo.

echo üîß –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ keyboards.py...
if exist "keyboards.py" (
    copy "keyboards.py" "keyboards_backup.py" >nul
    echo ‚úÖ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞: keyboards_backup.py
) else (
    echo ‚ùå –§–∞–π–ª keyboards.py –Ω–µ –Ω–∞–π–¥–µ–Ω
    pause
    exit /b 1
)

echo.
echo üß™ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–∞...
python -c "from keyboards import instructions_category_keyboard, instruction_keyboard; print('‚úÖ –§—É–Ω–∫—Ü–∏–∏ keyboards –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ')" 2>nul
if errorlevel 1 (
    echo ‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ —Ñ—É–Ω–∫—Ü–∏–π keyboards
    echo.
    echo üîß –†—É—á–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ...
    echo –î–æ–±–∞–≤—å—Ç–µ –≤ –∫–æ–Ω–µ—Ü keyboards.py —Å–ª–µ–¥—É—é—â–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏:
    echo.
    echo def instructions_category_keyboard(category_id: str):
    echo     kb = InlineKeyboardBuilder()
    echo     manager = get_instruction_manager()
    echo     instructions = manager.get_instructions_by_category(category_id)
    echo     if instructions:
    echo         for instruction in instructions:
    echo             kb.button(text=f"üìÑ {instruction['name']}", callback_data=f"instruction_{category_id}_{instruction['id']}")
    echo     else:
    echo         kb.button(text="‚ùå –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã", callback_data="no_instructions")
    echo     kb.button(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_categories")
    echo     kb.adjust(1)
    echo     return kb.as_markup()
    echo.
    echo def instruction_keyboard(category_id: str, instruction_id: str):
    echo     kb = InlineKeyboardBuilder()
    echo     manager = get_instruction_manager()
    echo     instruction = manager.get_instruction(category_id, instruction_id)
    echo     if instruction:
    echo         for format_type in instruction.get('formats', []):
    echo             kb.button(text=f"üìÑ {format_type.upper()}", callback_data=f"create_secure_link_{category_id}_{instruction_id}_{format_type}")
    echo     kb.button(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=f"category_{category_id}")
    echo     kb.adjust(1)
    echo     return kb.as_markup()
    echo.
    pause
    exit /b 1
)

echo ‚úÖ –§—É–Ω–∫—Ü–∏–∏ keyboards –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ
echo.

echo üß™ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –±–æ—Ç–∞...
python -c "from handlers import instructions as instructions_handlers; print('‚úÖ handlers.instructions –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ')" 2>nul
if errorlevel 1 (
    echo ‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ handlers.instructions
    echo üîÑ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏...
    copy "keyboards_backup.py" "keyboards.py" >nul
    pause
    exit /b 1
)

echo ‚úÖ handlers.instructions –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ
echo.

echo ========================================
echo           üéâ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!
echo ========================================
echo.
echo ‚úÖ keyboards.py –∏—Å–ø—Ä–∞–≤–ª–µ–Ω –∏ –ø—Ä–æ–≤–µ—Ä–µ–Ω
echo üìÅ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è: keyboards_backup.py
echo.
echo üöÄ –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –±–æ—Ç–∞:
echo    python bot.py
echo.
pause