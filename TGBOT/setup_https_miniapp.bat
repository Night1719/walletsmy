@echo off
echo ========================================
echo    –ù–∞—Å—Ç—Ä–æ–π–∫–∞ HTTPS Mini App
echo ========================================
echo.

echo üîß –°–æ–∑–¥–∞–Ω–∏–µ/–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ .env —Ñ–∞–π–ª–∞ –¥–ª—è HTTPS...
if not exist ".env" (
    echo # Mini App Configuration > .env
    echo MINIAPP_URL=https://bot.bunter.ru:4477/miniapp >> .env
    echo MINIAPP_WEBHOOK_URL=https://bot.bunter.ru:4477 >> .env
    echo MINIAPP_MODE=remote >> .env
    echo LINK_EXPIRY_MINUTES=40 >> .env
    echo. >> .env
    echo # Bot Configuration >> .env
    echo TELEGRAM_BOT_TOKEN=your_bot_token_here >> .env
    echo ADMIN_USER_IDS=your_user_id_here >> .env
    echo. >> .env
    echo # Instructions Configuration >> .env
    echo INSTRUCTIONS_DIR=instructions >> .env
    echo INSTRUCTIONS_CONFIG_FILE=instructions_config.json >> .env
    echo. >> .env
    echo # File Configuration >> .env
    echo VIDEO_FILE_EXTENSIONS=mp4,avi,mov,wmv,flv,webm,mkv >> .env
    echo SCREENSHOT_KEYWORDS=screenshot,screen,shot,—Å–∫—Ä–∏–Ω—à–æ—Ç,—Å–∫—Ä–∏–Ω,—Å–Ω–∏–º–æ–∫ >> .env
    echo MAX_FILE_SIZE_MB=100 >> .env
    echo. >> .env
    echo # SSL Configuration >> .env
    echo SSL_VERIFY=true >> .env
    echo SSL_CERT_PATH= >> .env
    echo SSL_KEY_PATH= >> .env
    echo SSL_PASSWORD= >> .env
    echo ‚úÖ .env —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω —Å HTTPS –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
) else (
    echo ‚úÖ .env —Ñ–∞–π–ª —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    echo.
    echo üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ Mini App URL –Ω–∞ HTTPS...
    
    REM Backup current .env
    copy .env .env.backup >nul
    
    REM Update MINIAPP_URL to use HTTPS
    powershell -Command "(Get-Content .env) -replace 'MINIAPP_URL=.*', 'MINIAPP_URL=https://bot.bunter.ru:4477/miniapp' | Set-Content .env"
    powershell -Command "(Get-Content .env) -replace 'MINIAPP_WEBHOOK_URL=.*', 'MINIAPP_WEBHOOK_URL=https://bot.bunter.ru:4477' | Set-Content .env"
    powershell -Command "(Get-Content .env) -replace 'MINIAPP_MODE=.*', 'MINIAPP_MODE=remote' | Set-Content .env"
    
    REM Add SSL configuration if not exists
    findstr /C:"SSL_VERIFY" .env >nul
    if errorlevel 1 (
        echo. >> .env
        echo # SSL Configuration >> .env
        echo SSL_VERIFY=true >> .env
        echo SSL_CERT_PATH= >> .env
        echo SSL_KEY_PATH= >> .env
        echo SSL_PASSWORD= >> .env
    )
    
    echo ‚úÖ Mini App URL –æ–±–Ω–æ–≤–ª–µ–Ω –Ω–∞ HTTPS
)

echo.
echo üß™ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...
python -c "from config import MINIAPP_URL, MINIAPP_MODE; print(f'MINIAPP_URL: {MINIAPP_URL}'); print(f'MINIAPP_MODE: {MINIAPP_MODE}')" 2>nul
if errorlevel 1 (
    echo ‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    echo üîÑ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏...
    if exist ".env.backup" copy .env.backup .env >nul
    pause
    exit /b 1
)

echo ‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ
echo.

echo üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ SSL —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è...
python -c "import requests; r = requests.get('https://bot.bunter.ru:4477', verify=True, timeout=5); print(f'SSL —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ: OK (—Å—Ç–∞—Ç—É—Å {r.status_code})')" 2>nul
if errorlevel 1 (
    echo ‚ö†Ô∏è  SSL —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ –∏–ª–∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω
    echo üìù –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ:
    echo    1. –°–µ—Ä–≤–µ—Ä bot.bunter.ru:4477 –¥–æ—Å—Ç—É–ø–µ–Ω
    echo    2. SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ
    echo    3. –ü–æ—Ä—Ç 4477 –æ—Ç–∫—Ä—ã—Ç –¥–ª—è HTTPS
) else (
    echo ‚úÖ SSL —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç
)

echo.
echo ========================================
echo           üéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!
echo ========================================
echo.
echo ‚úÖ Mini App –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è HTTPS
echo üîí URL: https://bot.bunter.ru:4477/miniapp
echo üîß –†–µ–∂–∏–º: remote
echo üîê SSL: –≤–∫–ª—é—á–µ–Ω
echo.
echo üìù –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ:
echo    1. SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
echo    2. –ü–æ—Ä—Ç 4477 –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è HTTPS
echo    3. Mini App —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω —Å SSL
echo    4. –ù–∞—Å—Ç—Ä–æ–µ–Ω—ã –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ —Ç–æ–∫–µ–Ω—ã –≤ .env
echo.
echo üîê –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤:
echo    ‚Ä¢ .pem, .crt, .cer - PEM —Ñ–æ—Ä–º–∞—Ç (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)
echo    ‚Ä¢ .p12, .pfx - PKCS#12 —Ñ–æ—Ä–º–∞—Ç
echo    ‚Ä¢ .key - –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á (–æ—Ç–¥–µ–ª—å–Ω–æ)
echo.
echo üìÅ –ü—Ä–∏–º–µ—Ä –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ .env:
echo    SSL_CERT_PATH=C:\path\to\certificate.pem
echo    SSL_KEY_PATH=C:\path\to\private.key
echo    SSL_PASSWORD=your_password  # —Ç–æ–ª—å–∫–æ –¥–ª—è .p12/.pfx
echo.
echo üöÄ –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –±–æ—Ç–∞:
echo    python bot.py
echo.
pause