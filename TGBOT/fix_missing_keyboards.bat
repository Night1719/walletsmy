@echo off
echo ========================================
echo    –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π keyboards
echo ========================================
echo.

echo üîß –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ keyboards.py...
if exist "keyboards.py" (
    copy "keyboards.py" "keyboards_backup_missing.py" >nul
    echo ‚úÖ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞: keyboards_backup_missing.py
) else (
    echo ‚ùå –§–∞–π–ª keyboards.py –Ω–µ –Ω–∞–π–¥–µ–Ω
    pause
    exit /b 1
)

echo.
echo üß™ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ —Ñ—É–Ω–∫—Ü–∏–π...
python -c "from keyboards import instructions_main_keyboard, instructions_category_keyboard, instruction_keyboard, otp_verification_keyboard, main_menu_after_auth_keyboard; print('‚úÖ –í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ keyboards –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã')" 2>nul
if errorlevel 1 (
    echo ‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ —Ñ—É–Ω–∫—Ü–∏–π keyboards
    echo üîß –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π...
    
    REM –î–æ–±–∞–≤–ª—è–µ–º otp_verification_keyboard –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    echo. >> keyboards.py
    echo def otp_verification_keyboard(): >> keyboards.py
    echo     """OTP verification keyboard""" >> keyboards.py
    echo     kb = ReplyKeyboardBuilder() >> keyboards.py
    echo     kb.row(KeyboardButton(text="üîÑ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–¥ –ø–æ–≤—Ç–æ—Ä–Ω–æ")) >> keyboards.py
    echo     kb.row(KeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞")) >> keyboards.py
    echo     return kb.as_markup(resize_keyboard=True) >> keyboards.py
    
    echo ‚úÖ –§—É–Ω–∫—Ü–∏–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ keyboards.py
)

echo.
echo üß™ –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ —Ñ—É–Ω–∫—Ü–∏–π...
python -c "from keyboards import instructions_main_keyboard, instructions_category_keyboard, instruction_keyboard, otp_verification_keyboard, main_menu_after_auth_keyboard; print('‚úÖ –í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ keyboards –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã')" 2>nul
if errorlevel 1 (
    echo ‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ —Ñ—É–Ω–∫—Ü–∏–π keyboards –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    echo üîÑ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏...
    copy "keyboards_backup_missing.py" "keyboards.py" >nul
    pause
    exit /b 1
)

echo ‚úÖ –í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ keyboards –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ
echo.

echo üß™ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ handlers.instructions...
python -c "from handlers import instructions as instructions_handlers; print('‚úÖ handlers.instructions –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω')" 2>nul
if errorlevel 1 (
    echo ‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ handlers.instructions
    echo üîß –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª—ã handlers/instructions.py –∏ keyboards.py
    pause
    exit /b 1
)

echo ‚úÖ handlers.instructions –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ
echo.

echo üß™ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –±–æ—Ç–∞...
python -c "import bot; print('‚úÖ bot.py –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω')" 2>nul
if errorlevel 1 (
    echo ‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ bot.py
    echo üîß –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    pause
    exit /b 1
)

echo ‚úÖ bot.py –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ
echo.

echo ========================================
echo           üéâ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!
echo ========================================
echo.
echo ‚úÖ keyboards.py –∏—Å–ø—Ä–∞–≤–ª–µ–Ω –∏ –ø—Ä–æ–≤–µ—Ä–µ–Ω
echo ‚úÖ handlers.instructions –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω
echo ‚úÖ bot.py –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω
echo üìÅ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è: keyboards_backup_missing.py
echo.
echo üöÄ –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –±–æ—Ç–∞:
echo    python bot.py
echo.
pause